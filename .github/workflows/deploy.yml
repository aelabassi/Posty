name: Build and Deploy

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  build:
    environment:
      name: testing
    env:
      DB_URL: ${{secrets.DB_URL}}
      DB_HOST: ${{secrets.DB_HOST}}
      DB_NAME: ${{secrets.DB_NAME}}
      DB_USER: ${{secrets.DB_USER}}
      DB_PASSWORD: ${{secrets.DB_PASSWORD}}
      DB_PORT: ${{secrets.DB_PORT}}
      PORT: ${{secrets.PORT}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}


    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{secrets.DB_USER}}
          POSTGRES_PASSWORD: ${{secrets.DB_PASSWORD}}
          POSTGRES_DB: ${{secrets.DB_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        


    runs-on: ubuntu-latest
    steps:
      - name: pull the repo
        uses: actions/checkout@v4
      - name: install python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install dependencies
        run: pip install -r requirements.txt
      - name: setup tests with pytest
        continue-on-error: true
        run: |
          pip install pytest
          python -m pytest -s -v

      - name: login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_USER_NAME}}
          password: ${{secrets.DOCKER_TOKEN}}
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v2
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          builder: ${{steps.buildx.outputs.name}}
          push: true
          tags: ${{secrets.DOCKER_USER_NAME}}/posty:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


# deploy to heruko
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production
    steps:
      - name: pull the repo
        uses: actions/checkout@v4
      - name: deploying to Heroku
        uses: akhilshns/heroku-deploy@v3.12.12
        with:
          heroku_api_key: ${{secrets.HEROKU_API_KEY}}
          heroku_app_name: ${{secrets.HEROKU_APPNAME}}
          heroku_email: ${{secrets.HEROKU_EMAIL}}
